name: Test reporter

on:
  workflow_dispatch:
    inputs:
      testCategory:
        description: test category [success, failure]
        required: true
        type: choice
        options:
          - success
          - failure
      testReporter:
        description: test reporter [dorny, enricomi, mikepenz, scacap]
        required: true
        type: choice
        options:
          - dorny
          - enricomi
          - mikepenz
          - scacap
          - all

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  test-and-report-dorny:
    name: Test and report
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.testReporter == 'dorny' || github.event.inputs.testReporter == 'all' }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Create test data
        run: |
          ./gradlew --no-daemon test -DtestCategory=${{ github.event.inputs.testCategory }}

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports-test
          path: build/reports/

      - name: Generate test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Dorny Test Results
          path: ./**/build/test-results/test/TEST-*.xml
          reporter: java-junit

  test-and-report-enricomi:
    name: Test and report
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.testReporter == 'enricomi' || github.event.inputs.testReporter == 'all' }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Create test data
        run: |
          ./gradlew --no-daemon test -DtestCategory=${{ github.event.inputs.testCategory }}

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports-test
          path: build/reports/

      - name: Generate test report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: EnricoMi Test Results
          files: ./**/build/test-results/test/TEST-*.xml

  test-and-report-mikepenz:
    name: Test and report
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.testReporter == 'mikepenz' || github.event.inputs.testReporter == 'all' }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Create test data
        run: |
          ./gradlew --no-daemon test -DtestCategory=${{ github.event.inputs.testCategory }}

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports-test
          path: build/reports/

      - name: Generate test report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          check_name: MikePenz Test Results
          report_paths: ./**/build/test-results/test/TEST-*.xml

  test-and-report-scacap:
    name: Test and report
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.testReporter == 'scacap' || github.event.inputs.testReporter == 'all' }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Create test data
        run: |
          ./gradlew --no-daemon test -DtestCategory=${{ github.event.inputs.testCategory }}

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports-test
          path: build/reports/

      - name: Generate test report
        if: always()
        uses: scacap/action-surefire-report@v1
        with:
          check_name: ScaCap Test Results
          report_paths: ./**/build/test-results/test/TEST-*.xml